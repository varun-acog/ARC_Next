"use strict";(()=>{var e={};e.id=61,e.ids=[61],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3623:(e,o,t)=>{t.r(o),t.d(o,{originalPathname:()=>v,patchFetch:()=>_,requestAsyncStorage:()=>S,routeModule:()=>g,serverHooks:()=>f,staticGenerationAsyncStorage:()=>m});var r={};t.r(r),t.d(r,{POST:()=>c});var s=t(9303),n=t(8716),a=t(670),i=t(7070),l=t(8445);let p=process.env.LDAP_USERNAME,d=process.env.LDAP_PASSWORD,u="https://demo-legal-llm-backend-1.hpc4.aganitha.ai/api/contracts/upload-for-review";async function c(e){try{let o;let t=await e.formData(),r=t.get("file"),s=t.get("template_type"),n=t.get("session_id");if(console.log("Upload For Review - Request received:",{sessionId:n,templateType:s,fileName:r?.name,fileType:r?.type,fileSize:r?.size}),!r)return console.log("Error: File is required"),i.NextResponse.json({error:"File is required"},{status:400});if(!s)return console.log("Error: Template type is required"),i.NextResponse.json({error:"Template type is required"},{status:400});if(!n)return console.log("Error: Session ID is required"),i.NextResponse.json({error:"Session ID is required"},{status:400});if(!p||!d)return console.log("Error: LDAP credentials are missing in environment variables"),i.NextResponse.json({error:"LDAP credentials are missing in environment variables"},{status:500});let a=`${p}:${d}`,c="Basic "+Buffer.from(a).toString("base64");console.log("Basic Auth header prepared (redacted for security)");let g=new FormData;g.append("file",r),g.append("template_type",s),g.append("session_id",n),console.log("Uploading review document to external endpoint:",u);let S=await fetch(u,{method:"POST",headers:{Accept:"application/json",Authorization:c},body:g}),m=S.headers.get("Content-Type");if(o=m?.includes("application/json")?await S.json():{text:await S.text()},console.log("External endpoint response:",{status:S.status,ok:S.ok,data:o,headers:Object.fromEntries(S.headers.entries())}),!S.ok){let e=o.error||"Failed to upload review document to external endpoint";return m?.includes("application/json")||(e=`${e} (Status: ${S.status} ${S.statusText})`),console.log("External endpoint error details:",o),i.NextResponse.json({error:e,details:o},{status:S.status})}return console.log("External endpoint success:",o),(0,l.XG)(n,{reviewFile:r.name}),console.log("Upload For Review - Stored in session:",{sessionId:n,reviewFile:r.name}),i.NextResponse.json({message:"File uploaded successfully",session_id:n,filename:r.name},{status:200})}catch(e){return console.error("Upload error:",e.message,e.stack),i.NextResponse.json({error:"Internal server error",details:e.message},{status:500})}}let g=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/contracts/upload-for-review/route",pathname:"/api/contracts/upload-for-review",filename:"route",bundlePath:"app/api/contracts/upload-for-review/route"},resolvedPagePath:"/Users/varun/work/ARC_Next/app/api/contracts/upload-for-review/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:S,staticGenerationAsyncStorage:m,serverHooks:f}=g,v="/api/contracts/upload-for-review/route";function _(){return(0,a.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:m})}},8445:(e,o,t)=>{t.d(o,{XG:()=>n}),console.log("Initializing sessionStore module");let r=globalThis;r.__SESSION_STORE?console.log("Reusing existing session store from globalThis.__SESSION_STORE:",r.__SESSION_STORE):(console.log("Creating new session store in globalThis.__SESSION_STORE"),r.__SESSION_STORE={});let s=r.__SESSION_STORE;function n(e,o){s[e]||(s[e]={}),s[e]={...s[e],...o},console.log("Session Store Updated:",{sessionId:e,data:s[e]}),console.log("Current Session Store:",s)}}};var o=require("../../../../webpack-runtime.js");o.C(e);var t=e=>o(o.s=e),r=o.X(0,[276,972],()=>t(3623));module.exports=r})();