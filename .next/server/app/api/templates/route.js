"use strict";(()=>{var e={};e.id=412,e.ids=[412],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8247:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>f,requestAsyncStorage:()=>l,routeModule:()=>u,serverHooks:()=>d,staticGenerationAsyncStorage:()=>c});var s={};r.r(s),r.d(s,{GET:()=>p});var a=r(9303),o=r(8716),n=r(670),i=r(7070);async function p(e){let t=process.env.LDAP_USERNAME,r=process.env.LDAP_PASSWORD,s=process.env.API_BASE_URL;if(!t||!r||!s)return console.error("Missing environment variables at",new Date().toISOString()),i.NextResponse.json({error:"Server configuration error"},{status:500});let a=Buffer.from(`${t}:${r}`).toString("base64");try{let e=await fetch(`${s}/api/templates`,{method:"GET",headers:{Accept:"application/json",Authorization:`Basic ${a}`}});if(!e.ok){let t=await e.text();return console.error(`Failed to fetch templates: ${e.status} - ${t} at ${new Date().toISOString()}`),i.NextResponse.json({error:`Failed to fetch templates: ${t}`},{status:e.status})}let t=await e.json();return console.log(`Templates fetched successfully at ${new Date().toISOString()}`),i.NextResponse.json(t)}catch(e){return console.error("Error fetching templates:",e.message,"at",new Date().toISOString()),i.NextResponse.json({error:"Failed to fetch templates"},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/templates/route",pathname:"/api/templates",filename:"route",bundlePath:"app/api/templates/route"},resolvedPagePath:"/Users/varun/work/ARC_Next/app/api/templates/route.js",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:c,serverHooks:d}=u,m="/api/templates/route";function f(){return(0,n.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:c})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[276,972],()=>r(8247));module.exports=s})();